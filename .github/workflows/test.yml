name: Test

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'src-tauri/**'
      - 'tests/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/test.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'src-tauri/**'
      - 'tests/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/test.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: /home/runner/.local/share/pnpm/store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0-rc.8
          run_install: true

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'

      - name: Run unit tests
        run: pnpm test

  build:
    needs: [test]
    # if: ${{ github.event.pull_request.merged }}
    strategy:
      fail-fast: true
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm + deps
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
          run_install: true

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libayatana-appindicator3-dev

      - name: Build Vite + Tauri
        run: pnpm build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
